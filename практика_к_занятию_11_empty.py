# -*- coding: utf-8 -*-
"""Практика_к_занятию_11 empty.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IF0V0KGCVBr6x9XRn2TbbwiM-7mL1Myk

# Практика

## Определение вероятности. События

Требуется сгенерировать необходимые выборки и произвести по ним расчеты
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as sts
# %matplotlib inline

"""### Задача 1
Брошено две монеты. Найти вероятность того, что монеты выпали разными сторонами
"""

N = 1000
sample = np.random.choice([0, 1], N)
sample1 = np.random.choice([0, 1], N)
list = sample.tolist()
list_1 = sample1.tolist()
list_2 = [i for i, j in zip(list, list_1) if i != j]
a = len(list_2)
print(a/N)

# Всего возможно 4 варианта событий: ОО, ОР, РО, РР. монеты выпали разными сторонами в 2 случаях. Вероятность составляет 2/4 = 1/2

"""### Задача 2
Брошено три монеты. Описать множество всех элементарных событий. Найти вероятности следующих событий:


1.   A = {не выпало ни одного герба}
2.   B = {выпало четное число гербов}
3.   C = {на третьей монете выпал герб}

"""

N = 1000
sample = np.random.choice([0, 1], N)
sample1 = np.random.choice([0, 1], N)
sample2 = np.random.choice([0, 1], N)
list = sample.tolist()
list_1 = sample1.tolist()
list_2 = sample2.tolist()
list_3 = [i for i, j, k in zip(list, list_1, list_2) if i == j == k == 0]
a = len(list_3)
list_4 = [i for i, j, k in zip(list, list_1, list_2) if k == 1] 
b = len(list_4)
list_5 = [i for i, j, k in zip(list, list_1, list_2) if i == j == 1 or j == k == 1 or i == k == 1]
c = len(list_5)
print(a/N)
print(c/N)
print(b/N)

# всего получаем 8 возможных исходов. ООО, ООР, ОРР, ОРО, РРР, РРО, РОО, РОР. вероятность получаем: 1 - 1/8, 2 - 3/8, 3 - 3/8

"""Предлагается также решить задачи: 

### Задача 3
Из двух претендентов E и L на ответственную должность три члена комиссии должны отобрать одного. Каждый член комиссии должен указать либо одного достойного, либо забраковать обоих. Претендент считается выбранным, если он был признана достойным хотя бы двумя членами комиссии.
Найти вероятность событий:

A = {рекомендован L}, B = {рекомендован E}

"""

N = 1000
sample = np.random.choice([0, 1, 2], N)
sample1 = np.random.choice([0, 1, 2], N)
sample2 = np.random.choice([0, 1, 2], N)
list = sample.tolist()
list_1 = sample1.tolist()
list_2 = sample2.tolist()
list_3 = [i for i, j, k in zip(list, list_1, list_2) if i == j == 1 or j == k == 1 or i == k == 1]
a = len(list_3)
print(a/N)

# число исходов - 27. вероятность А = 7/27, вероятность В = 7/27



"""### Задача 4
Брошено две игральных кости. Описать множество элементарных событий. Найти вероятности событий:

A = {вышло две "шестерки"}

B = {сумма выпавших очков не меньше 11}

C = {не выпала ни одна "шестерка"}
"""

N = 10000
sample = np.random.choice([1, 2, 3, 4, 5, 6], N)
sample1 = np.random.choice([1, 2, 3, 4, 5, 6], N)
list = sample.tolist()
lis = sample1.tolist()
list_2 = [i for i, j in zip(list, lis) if i == j == 6]
a = len(list_2)
list_3 = [i for i, j in zip(list, lis) if i != 6 and j != 6]
b = len(list_3)
list_4 = [i for i, j in zip(list, lis) if (i + j) > 11]
c = len(list_4)
print(a/N)
print(c/N)
print(b/N)

# число исходов - 36. А = 1/36, 3/36, 25/36

"""## Вероятность суммы событий

### Задача 5
Брошены две игральные кости. Найти вероятность события D = {выпала хотя бы одна шестёрка}
"""

N = 1000
sample = np.random.choice([1, 2, 3, 4, 5, 6], N)
sample1 = np.random.choice([1, 2, 3, 4, 5, 6], N)
list = sample.tolist()
lis = sample1.tolist()
list_2 = [i for i, j in zip(list, lis) if i == 6 or j == 6]
a = len(list_2)
print(a/N)

# чило исходов - 36. вероятность - 11/36

"""Предлагается также решить задачи: 

### Задача 6
В телефонном номере три последние цифры стерлись. Считая, что все возможные значения стершихся цифр равновероятны, найти вероятность событий:

A = {Стерлись различные цифры},

B = {Стерлись одинаковые цифры},

C = {Среди стершихся цифр хотя бы две совпадают},

D = {Среди стершихся цифр хотя бы две различны}

"""

N = 10000
sample = np.random.choice([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], N)
sample1 = np.random.choice([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], N)
sample2 = np.random.choice([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], N)
list = sample.tolist()
lis = sample1.tolist()
li = sample2.tolist()
list_3 = [i for i, j, k in zip(list, lis, li) if i != j != k] 
a = len(list_3)
list_4 = [i for i, j, k in zip(list, lis, li) if i == j == k] 
b = len(list_4)
list_5 = [i for i, j, k in zip(list, lis, li) if i == j or j == k or i ==j] 
c = len(list_5)
list_6 = [i for i, j, k in zip(list, lis, li) if i != j or j!= k or i !=j] 
d = len(list_6)
print(a/N)
print(b/N)
print(c/N)
print(d/N)

"""## Случайные величины

### Задача 7
В лотерее имеется 10 билетов, из которых один выигрышный. Размер выигрыша 10 ден. ед.; стоимость билета 1 ден ед. Найти закон распределения случайной величины X, равной чистому выигрышу участника лотереи, который вытаскивает билет первым.
"""

# распределение бернулли
bernoulli_rv = sts.bernoulli(0.1) # при выборке из 10 значений получаем 0, но в условии четко прописано - 10 билетов, можно ли увеличивать количество испытаний?

bernoulli_rv.rvs(10)

from scipy.stats import bernoulli # попробовала построить график распределения
fdata = bernoulli.rvs(size = 10 , p = 0.1)
sb.set_style('whitegrid')
sb.displot(fdata, discrete=True, shrink=.8 , color = 'k')
plt.show()

# вероятность выигрыша = 1/10, соответственно, вероятность проигрыша 9/10. При данном условии выигрыш составит 9 ед.

"""Предлагается также решить задачу: 

### Задача 8
Брошены две игральные кости. Найти закон распределения случайной величины $X$, равной сумме выпавших очков. Найти вероятности событий ${X <= 4}$, ${X > 4}$
"""

N = 1000
M = 0
sample = np.random.choice([1, 2, 3, 4, 5, 6], N)
sample1 = np.random.choice([1, 2, 3, 4, 5, 6], N)
list = sample.tolist()
list1 = sample1.tolist()
list2 = [x+y for x, y in zip(list, list1)]
a = len(list2)
b = (list2.count(2)+list2.count(3)+list2.count(4))
c = a - b
print(b/a)
print(c/a)

"""## Условные вероятности

### Задача 9
Из колоды (36 карт) вынимают последовательно без возвращения две карты. Найти вероятность того, что первой картой была шестерка, а второй — семерка. Найти условную вероятность того же события при условии, что обе карты бубновой масти.
"""

# создаю и тасую колоду карт А - туз, J - валет, Q - королева, К - король
def make_deck():
    ranks = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']
    suits = ['C', 'D', 'H', 'S']
    deck  = []
    for s in suits:
        for r in ranks:
            deck.append(s + r)
        random_number.shuffle(deck)
    return deck

# выдаю 2 карты
n = 2
def deal_hand(n, deck):
    hand = [deck[i] for i in range(n)]
    del deck[:n]
    return hand, deck

# очевидно, что в колоде осталось 34 карты и вероятность того, что 1 была 6 - 4/36, ф 2 7 4/35, но воссоздать в питоне не выходит





"""Предлагается также решить задачу: 

### Задача 10
Из урны, содержащей два белых и три черных шара, последовательно извлекают два шара; вынутые шары не возвращаются. Если первый шар оказался черным, то перед вторым извлечением в урну добавляют белый шар. В противном случае состав оставшихся шаров не меняют. Найти вероятности событий:

$A$ = {извлечены два белых шара},

$B$ = {извлечены два черных шара}

Указание. Пусть событие $C_1$ = {первый шар белый}, событие $C_2$ = {второй шар белый}. Тогда $A = C_1C_2$, $B = \overline C_1 \overline C_2$ 
"""

